################
# INSTRUCTIONS #
################

This demo will be using Faucet and Mininet with an Open vSwitch to demonstrate Poseidon working with a virtual SDN network.

Poseidon has been installed along with all of the dependencies needed for this demo. It is set to start up automatically by default and can take a few minutes to finish initializing. You can check on the progress with `poseidon status`
Once the service shows Active as 'active' and the logs show that it is no longer "waiting for Poseidon containers to become healthy", you can check the Poseidon logs with `poseidon logs`.

In another terminal you can start mininet with the following:

sudo mn --topo single,3 --mac --switch ovsk --controller=remote,ip=127.0.0.1:6653

Mininet will have created an OVS switch, attached 3 hosts (h1-h3) on ports 1-3, respectively, and connected to Faucet using OpenFlow over port 6653. We will generate some traffic between h1 and h2, and use our 3rd interface as our mirror port.  See '/etc/faucet/faucet.yaml' for the configuration.

At the mininet prompt start a simple webserver on h1:

h1 cd / && python3 -m http.server &

Now connect to the webserver from h2 using netcat:

h2 echo -n "GET / HTTP/1.0" | nc 10.0.0.1 8000

At this point it is worth watching the Faucet logs, which can be tailed like so: `tail /var/log/faucet/faucet.log`.
If the Faucet logs show L2 learned records that don't have valid IP addresses for L3 (most likely) then you'll have to wait for the expiration timeout of Faucet, which by default is 5 minutes. Once Faucet has 0 recently active hosts (you'll see messages in the logs), then try running the netcat command above again. That should trigger a relearn with valid L3 IP addresses on Faucet, at which point Poseidon will pick them up. If picked up, the logs will show something like the following:

Jul 12 16:00:11 faucet.valve INFO     DPID 1 (0x1) switch-1 L2 learned 00:00:00:00:00:02 (L2 type 0x0800, L3 src 10.0.0.2, L3 dst 10.0.0.1) on Port 2 on VLAN 8 (1 hosts total)
Jul 12 16:00:11 faucet.valve INFO     DPID 1 (0x1) switch-1 L2 learned 00:00:00:00:00:01 (L2 type 0x0800, L3 src 10.0.0.1, L3 dst 10.0.0.2) on Port 1 on VLAN 8 (2 hosts total)

The Poseidon logs should start picking up the 2 hosts and begin capturing traffic. Once the hosts are moved into the mirroring section of the Poseidon logs you can look at the faucet.yaml file again and see that it got updated to start mirroring traffic. Additionally if you do `docker ps` you still start to see ncapture containers running which are creating the PCAP files of the mirrored traffic.  You can find those PCAP files in '/opt/vent_files'. Eventually after the captures have been processed and analyzed by the machine learning portion of Poseidon (about 15 minutes), you'll see results of the machine learning classification in the poseidon logs.

While Poseidon is capturing, you'll want to generate some meaningful traffic. To do this, we'll download a large file from the webserver like so:

h2 echo -n "GET /opt/poseidon/dist/cyberreboot-vent.tar HTTP/1.0" | nc 10.0.0.1 8000 > vent.tar

After the capture is done you'll see output of the devices learned with `poseidon logs` like the following:

Jul 12 12:45:59 box poseidon[29288]: 2018-07-12T12:45:59+00:00 172.17.0.1 wizardly_knuth/310e22c438ee/pcap[1302]: INFO:__main__:Unknown : 0.996
Jul 12 12:45:59 box poseidon[29288]: 2018-07-12T12:45:59+00:00 172.17.0.1 wizardly_knuth/310e22c438ee/pcap[1302]: INFO:__main__:Developer workstation : 0.003
Jul 12 12:45:59 box poseidon[29288]: 2018-07-12T12:45:59+00:00 172.17.0.1 wizardly_knuth/310e22c438ee/pcap[1302]: INFO:__main__:VPN client : 0.0
Jul 12 12:45:59 box poseidon[29288]: 2018-07-12T12:45:59+00:00 172.17.0.1 wizardly_knuth/310e22c438ee/pcap[1302]: INFO:__main__:Message: {"230e8a577f2eda0811825808b1619b979ba51641": {"timestamp": 1531424281.774556, "decisions": {"behavior": "normal", "investigate": true}, "valid": true, "classification": {"confidences": [0.9956208918271187, 0.0032885507438741735, 0.0003972138701585738], "labels": ["Unknown", "Developer workstation", "VPN client"]}}}

Finally, you can visualize the network that Poseidon sees using CRviz, which can be accessed with `poseidon visualize`.

When you're done with the demo, you can use 'poseidon reset' (note: Faucet will still be running in Docker containers).

###############################################################################
# If you're reading this you've successfully completed the demo instructions! #
# Otherwise, scroll up to the INSTRUCTIONS header and start there.            #
# These instructions can also be retrieved here:                              #
# https://raw.githubusercontent.com/CyberReboot/poseidon/master/docs/demo.txt #
###############################################################################

#!/bin/bash

set -e

. /usr/share/debconf/confmodule
db_version 2.0

db_capb backup

# get list of interfaces available on the install system
docker pull cyberreboot/gonet > /dev/null 2>&1
declare -a OPTIONS
COUNT=0
for interface in $(docker run --net=host cyberreboot/gonet);
do
    if [ "$interface" != "lo" ] && [ "$interface" != "" ] && [[ ! "$interface" =~ ^veth ]]; then
        OPTIONS[$COUNT]=$interface;
        COUNT=$((COUNT+1));
    fi
done
db_subst poseidon/available_nics choices "$(echo "${OPTIONS[@]}" | sed 's/ /, /g')"

STATE=1
while [ "$STATE" != 0 ] && [ "$STATE" != 13 ]; do
    case "$STATE" in
    1)
        db_input critical poseidon/controller_type || true
    ;;

    2)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_input critical poseidon/faucet_same_host || true
        elif [ "$RET" == "BigSwitch Cloud Fabric" ]; then
            db_input critical poseidon/bcf_controller_uri || true
        fi
    ;;

    3)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_get poseidon/faucet_same_host
            if [ "$RET" == "No" ]; then
                db_input critical poseidon/faucet_controller_uri || true
            fi
        elif [ "$RET" == "BigSwitch Cloud Fabric" ]; then
            db_input critical poseidon/bcf_controller_user || true
            db_input critical poseidon/bcf_controller_pass || true
        fi
    ;;

    4)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_get poseidon/faucet_same_host
            if [ "$RET" == "No" ]; then
                db_input critical poseidon/faucet_controller_user || true
                db_input critical poseidon/faucet_controller_pass || true
            fi
        fi
    ;;

    5)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_input critical poseidon/faucet_controller_mirror_ports || true
        elif [ "$RET" == "BigSwitch Cloud Fabric" ]; then
            db_input critical poseidon/bcf_controller_interface_group || true
        fi
    ;;

    6)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_input low poseidon/faucet_fa_rabbit_enabled || true
        elif [ "$RET" == "BigSwitch Cloud Fabric" ]; then
            db_input critical poseidon/bcf_controller_span_fabric_name || true
        fi
    ;;

    7)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_get poseidon/faucet_fa_rabbit_enabled
            if [ "$RET" == "Yes" ]; then
                db_input low poseidon/faucet_fa_rabbit_host || true
                db_input low poseidon/faucet_fa_rabbit_port || true
                db_input low poseidon/faucet_fa_rabbit_exchange || true
                db_input low poseidon/faucet_fa_rabbit_exchange_type || true
                db_input low poseidon/faucet_fa_rabbit_routing_key || true
            fi
        fi
    ;;

    8)
        db_get poseidon/controller_type
        if [ "$RET" != "Demo" ]; then
            db_input critical poseidon/collector_nic || true
        fi
    ;;

    9)
        db_get poseidon/controller_type
        if [ "$RET" != "Demo" ]; then
            db_get poseidon/collector_nic
            if [ "$RET" == "Specify your own" ]; then
                db_input critical poseidon/specify_nic || true
            else # list ones available on the install system
                db_input critical poseidon/available_nics || true
        fi
    fi
    ;;

    10)
        db_get poseidon/controller_type
        if [ "$RET" != "Demo" ]; then
            db_input high poseidon/max_concurrent_reinvestigations || true
        fi
    ;;

    11)
        db_get poseidon/controller_type
        if [ "$RET" != "Demo" ]; then
            db_input high poseidon/learn_public_addresses || true
        fi
    ;;

    12)
        db_get poseidon/controller_type
        if [ "$RET" != "Demo" ]; then
            db_input low poseidon/logging_level || true
        fi
    ;;
    esac

    if db_go; then
        STATE=$((STATE + 1))
    else
        STATE=$((STATE - 1))
    fi
done
